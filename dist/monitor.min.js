!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=1)}([function(e,t,n){"use strict";var i=function(){return(i=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},o={timeout:1e3},r={events:[],pagestay:o},a=function(){function e(e){void 0===e&&(e=r),this._url="",this._title="",this._baseOptions=null,this._pageLoadTime=null,this._events=null,this._pagestay=null,this._eventHandlers={pageload:[],elementfocus:[],elementblur:[],elementclick:[],elementinput:[],pagestay:[]},this._pagestay=i({},o,e.pagestay),this._events=e.events,this._title=document.title,this._url=location.href,this._baseOptions={title:this._title,url:this._url},this._onPageLoad(),this._hasRegisterEvent("elementclick")&&this._onElementClick(),this._hasRegisterEvent("elementinput")&&this._onElementInput(),this._hasRegisterEvent("elementfocus")&&this._onElementFocus(),this._hasRegisterEvent("elementblur")&&this._onElementBlur()}return e.prototype._hasRegisterEvent=function(e){return this._events.indexOf(e)>-1},e.prototype.on=function(e,t){if(null==this._eventHandlers[e])return console.warn("No such event");this._eventHandlers[e].push(t)},e.prototype.off=function(e,t){if(null==this._eventHandlers[e])return console.warn("No such event");this._eventHandlers[e]=this._eventHandlers[e].filter(function(e){return e!==t})},e.prototype._handleEvent=function(e,t){var n=this;this._eventHandlers[e].forEach(function(e){e(i({},n._baseOptions,t))})},e.prototype._onPageLoad=function(){var e=this;window.addEventListener("load",function(){if(e._pageLoadTime=Date.now(),e._hasRegisterEvent("pageload")){var t={title:e._title,time:e._pageLoadTime};e._handleEvent("pageload",t)}if(e._hasRegisterEvent("pagestay")){var n={title:e._title,startTime:e._pageLoadTime,time:e._pageLoadTime,duration:0};e._handleEvent("pagestay",n),e._onPageStay()}})},e.prototype._onPageStay=function(){var e=this;setTimeout(function(){var t=Date.now(),n=e._pageLoadTime,i=t-n,o={title:e._title,startTime:n,time:t,duration:i};e._handleEvent("pagestay",o),e._onPageStay()},this._pagestay.timeout)},e.prototype._onElementClick=function(){var e=this;document.addEventListener("click",function(t){var n={event:t,time:Date.now()};e._handleEvent("elementclick",n)})},e.prototype._onElementInput=function(){var e=this;document.addEventListener("input",function(t){var n={event:t,time:Date.now()};e._handleEvent("elementinput",n)})},e.prototype._onElementFocus=function(){var e=this;document.addEventListener("focus",function(t){var n={event:t,time:Date.now()};e._handleEvent("elementfocus",n)},!0)},e.prototype._onElementBlur=function(){var e=this;document.addEventListener("blur",function(t){var n={event:t,time:Date.now()};e._handleEvent("elementblur",n)},!0)},e}();t.a=a},function(e,t,n){"use strict";n.r(t),function(e,t){var i=n(0);!function(e){"object"==typeof exports?t.exports=i.a:"function"==typeof define&&(define.cmd||n(4))?define(Monitor):e.Monitor=i.a}("undefined"!=typeof window?window:e)}.call(this,n(2),n(3)(e))},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t){(function(t){e.exports=t}).call(this,{})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,